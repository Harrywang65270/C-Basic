1. 结构体的定义与使用
结构体是将不同类型的数据结构组合起来

struct 结构体类型名{
       成员列表
}；


例子：

struct STUDENT{
     int no;
     char name[21];
     char sex;
     int age;
     char qq[11];
     double score;
};


结构体的定义既可以是全局的也是可以是局部的。

定义结构体对象有两种形式。
（1） 先声明结构体类型再定义对象

结构体类型名 结构体对象名列表

STUDENT a,b;  //定义结构体对象

（2）声明结构体类型的同时定义对象

结构体类型名{
     成员列表
} 结构体对象名列表；

DATE { //日期类型
       int year, month, day;
} d1,d2; //定义结构体对象

结构体与数组
数组元素可以使结构体类型，称为结构体数组，如一维结构体数组定义形式为：
struct 结构体类型名结构体数组名[常量表达式]

struct POINT{
       int x,y;
}
POINT points[100];


如果成员本身又是一个结构体对象指针，就要用指针成员引用运算符一级一级地引用成员。
例如：

DATE d = {1981,1,1};
TEACHER { //教师信息类型
       int no;
       char name[21]
       DATE *pbirthday;
}

a = {1001, "Li Min", &d}, *p=&a;
p -> no =10001;
p -> pbirthday -> year = 2008;

-> 为指针成员引用运算符

!!!
foo->bar is equivalent to (*foo).bar
!!!

结构体与函数

将结构体对象作为函数实参传递到函数中，采用值传递方式。例如：
struct DATA {
   int data;
   char name[10];
};

void fun1(DATA x);
void fun2()
{
    DATA a={1, "LiMin"};
    fun1(a)
}

将结构体数组作为函数参数，采用地址传递方式。 
函数调用实参是数组名，形参必须是同类型的结构体数组。例如:
void fun3(DATA X[])
void fun4()
{
 DATA A[3] = {{1, "LiMin"},{2,"MaGang"}}
 fun3(A);
}
